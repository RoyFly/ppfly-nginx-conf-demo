
#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;
    sendfile        on;
    #tcp_nopush     on;
	log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                  '$status $body_bytes_sent "$http_referer" '
                  '"$http_user_agent" "$http_x_forwarded_for"';
    keepalive_timeout  65;
    client_max_body_size 100m;
    gzip  on;

    gzip_min_length 1k;
	gzip_buffers 4 16k;
	gzip_comp_level 5;
	gzip_types text/plain application/javascript text/css application/xml text/javascript application/x-httpd-php image/jpeg image/gif image/png;
	gzip_vary on;
	gzip_disable "MSIE [1-6]\.";
	proxy_buffering off;
	
	upstream tomcat_server{
		server 192.168.31.204:8086;
		keepalive 2000;
	}

    server {
        listen       80;
       	server_name  $host;
		add_header 'Access-Control-Allow-Origin' '*';
		add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE';
		add_header 'Access-Control-Allow-Headers' 'Content-Type';
		
		#nginx禁用不安全HTTP方法（禁用webDAV）
		if ($request_method !~* GET|POST|HEAD) {
			return 403;
		}

		#设置只允许遵守同源策略的资源（和站点同源）通过frame加载那些受保护的资源
		add_header X-Frame-Options SAMEORIGIN;

        access_log  logs/host.access.log  main;

		location ^~/ {
			rewrite ^.*$ /web/default/index.htm last;
		}
		
        location /web {
			proxy_pass http://tomcat_server/web;
			#nginx中关闭HTTP方法谓词,限制除了(limit_except)GET POST外的所有谓词
			#GET已经包含HEAD
			limit_except GET POST {  
				deny  all;  
			}
            proxy_http_version 1.1;  
            proxy_set_header Upgrade $http_upgrade;  
            proxy_set_header Connection "upgrade";
            proxy_set_header	Host $host;
            proxy_read_timeout 86400;
        }
		
		location /app {
		    proxy_pass http://127.0.0.1:8090/app/;
		}
		 
		location = /app.js {
		    proxy_pass http://127.0.0.1:8090/app.js;
		}
		
		location /app/home {
			proxy_pass http://127.0.0.1:8090/app/home;
		}
		
		location @router {
			rewrite ^.*$ /index.html last;
		}

		location /static/ {
		    proxy_pass http://127.0.0.1:8090/static/;
		}
		
		location /src/ {
			proxy_pass http://127.0.0.1:8090/src/;
		}
    }


}
