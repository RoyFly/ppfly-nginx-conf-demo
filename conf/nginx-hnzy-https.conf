
#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
	worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    '$status $body_bytes_sent "$http_referer" '
    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;
    keepalive_timeout  65;
    map $http_upgrade $connection_upgrade {
      default upgrade;
      '' close;
    }
    upstream web_tomcat_server{
      server 127.0.0.1:8085;
      keepalive 2000;
    }
    upstream nodeJs_local_server{
      server 127.0.0.1:8090;
      keepalive 2000;
    }
    gzip  on;
    gzip_min_length 1k;
    gzip_buffers 4 16k;
    #gzip_http_version 1.0;
    gzip_comp_level 5;
    gzip_types text/plain application/javascript text/css application/xml text/javascript application/x-httpd-php image/jpeg image/gif image/png;
    gzip_vary on;
    gzip_disable "MSIE [1-6]\.";
    proxy_buffering off;

    server {
      listen       8088;
      server_name localhost;
      add_header X-Via $server_addr;
      add_header X-Cache $upstream_cache_status;
      # 允许跨域src/web/WEB-INF/classes/com/surekam/platform/core/websocket/confige/WebSocketConfig.class
      add_header "Access-Control-Allow-Origin" "$http_origin";
      add_header "Access-Control-Allow-Credentials" "true";
      add_header "Access-Control-Allow-Methods" "GET, POST, OPTIONS, DELETE, PATCH, PUT, HEAD";
      add_header "Access-Control-Allow-Headers" "DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type";
      if ($request_method = 'OPTIONS') {
       return 204;
      }
      location =/ {
        rewrite ^.*$ /itsms last;
      }
      location /web {
        proxy_pass http://web_tomcat_server/web;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header Origin "";
        proxy_read_timeout 86400;
      }
	  location /itsms {
	    proxy_pass http://web_tomcat_server/web;
	    proxy_http_version 1.1;
	    proxy_set_header Upgrade $http_upgrade;
	    proxy_set_header Connection "upgrade";
	    proxy_set_header Host $host;
	    proxy_set_header Origin "";
	    proxy_read_timeout 86400;
	  }
      location  /app {
        proxy_pass http://nodeJs_local_server/app/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header       Host $host;
      }
        location  /assets {
        proxy_pass http://nodeJs_local_server/assets/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header       Host $host;
        }

      location  /static {
        proxy_pass http://nodeJs_local_server/static;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header       Host $host;
      }
      location = /app.js {
        proxy_pass http://nodeJs_local_server/app.js;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header       Host $host;
      }

      location @router {
        rewrite ^.*$ /index.html last;
      }
    }
	
	
	server {
      listen       443;
	  ssl on;
	  ssl_certificate ssl/cacert.pem;
	  ssl_certificate_key ssl/privkey.pem;
	  
      server_name localhost;
      add_header X-Via $server_addr;
      add_header X-Cache $upstream_cache_status;
      # 允许跨域src/web/WEB-INF/classes/com/surekam/platform/core/websocket/confige/WebSocketConfig.class
      add_header "Access-Control-Allow-Origin" "$http_origin";
      add_header "Access-Control-Allow-Credentials" "true";
      add_header "Access-Control-Allow-Methods" "GET, POST, OPTIONS, DELETE, PATCH, PUT, HEAD";
      add_header "Access-Control-Allow-Headers" "DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type";
      if ($request_method = 'OPTIONS') {
       return 204;
      }
      location =/ {
        rewrite ^.*$ /itsms last;
      }
      location /web {
        proxy_pass http://web_tomcat_server/web;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header Origin "";
        proxy_read_timeout 86400;
      }
	  location /itsms {
	    proxy_pass http://web_tomcat_server/itsms;
	    proxy_http_version 1.1;
	    proxy_set_header Upgrade $http_upgrade;
	    proxy_set_header Connection "upgrade";
	    proxy_set_header Host $host;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header X-Forwarded-Proto $scheme;
	    proxy_set_header Origin "";
	    proxy_read_timeout 86400;
	  }
      location  /app {
        proxy_pass http://nodeJs_local_server/app/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header       Host $host;
      }
        location  /assets {
        proxy_pass http://nodeJs_local_server/assets/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header       Host $host;
        }

      location  /static {
        proxy_pass http://nodeJs_local_server/static;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header       Host $host;
      }
      location = /app.js {
        proxy_pass http://nodeJs_local_server/app.js;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header       Host $host;
      }

      location @router {
        rewrite ^.*$ /index.html last;
      }
    }

}
